name: Release
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.3

      - name: Install Dependencies
        run: pnpm install

      - name: Run Tests
        run: pnpm test:ci

      - name: Build and Publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            pnpm build:linux
          else
            pnpm build:win
          fi
        shell: bash

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: noggin-dist-${{ runner.os }}
          path: |
            ./templates/*.md
            ./dist/*.AppImage
            ./dist/*.deb
            ./dist/*.snap
            ./dist/*-setup.exe
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set Release Variables
        id: release_vars
        run: |
          if [[ ${{ github.ref_name }} == *-preview ]]; then
            echo "is_preview=true" >> $GITHUB_OUTPUT
          else
            echo "is_preview=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: noggin-dist-*
          merge-multiple: true

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Noggin ${{ github.ref_name }} - Preview Release ðŸš€
          body_path: templates/RELEASE.md
          draft: ${{ steps.release_vars.outputs.is_preview }}
          prerelease: ${{ steps.release_vars.outputs.is_preview }}
          make_latest: ${{ steps.release_vars.outputs.is_preview != 'true' }}
          files: |
            dist/*.AppImage
            dist/*.deb
            dist/*.snap
            dist/*-setup.exe
          fail_on_unmatched_files: true
