/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as ModuleCreateImport } from './routes/module/create'
import { Route as LibraryViewLibraryIdImport } from './routes/library/view.$libraryId'
import { Route as ModuleViewLibraryIdModuleIdImport } from './routes/module/view.$libraryId.$moduleId'
import { Route as SubmissionLibraryIdModuleIdQuizIdAttemptImport } from './routes/submission.$libraryId.$moduleId.$quizId.$attempt'
import { Route as QuizViewLibraryIdModuleIdQuizIdImport } from './routes/quiz/view.$libraryId.$moduleId.$quizId'
import { Route as QuizSessionLibraryIdModuleIdQuizIdImport } from './routes/quiz/session.$libraryId.$moduleId.$quizId'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ModuleCreateRoute = ModuleCreateImport.update({
  id: '/module/create',
  path: '/module/create',
  getParentRoute: () => rootRoute,
} as any)

const LibraryViewLibraryIdRoute = LibraryViewLibraryIdImport.update({
  id: '/library/view/$libraryId',
  path: '/library/view/$libraryId',
  getParentRoute: () => rootRoute,
} as any)

const ModuleViewLibraryIdModuleIdRoute =
  ModuleViewLibraryIdModuleIdImport.update({
    id: '/module/view/$libraryId/$moduleId',
    path: '/module/view/$libraryId/$moduleId',
    getParentRoute: () => rootRoute,
  } as any)

const SubmissionLibraryIdModuleIdQuizIdAttemptRoute =
  SubmissionLibraryIdModuleIdQuizIdAttemptImport.update({
    id: '/submission/$libraryId/$moduleId/$quizId/$attempt',
    path: '/submission/$libraryId/$moduleId/$quizId/$attempt',
    getParentRoute: () => rootRoute,
  } as any)

const QuizViewLibraryIdModuleIdQuizIdRoute =
  QuizViewLibraryIdModuleIdQuizIdImport.update({
    id: '/quiz/view/$libraryId/$moduleId/$quizId',
    path: '/quiz/view/$libraryId/$moduleId/$quizId',
    getParentRoute: () => rootRoute,
  } as any)

const QuizSessionLibraryIdModuleIdQuizIdRoute =
  QuizSessionLibraryIdModuleIdQuizIdImport.update({
    id: '/quiz/session/$libraryId/$moduleId/$quizId',
    path: '/quiz/session/$libraryId/$moduleId/$quizId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/module/create': {
      id: '/module/create'
      path: '/module/create'
      fullPath: '/module/create'
      preLoaderRoute: typeof ModuleCreateImport
      parentRoute: typeof rootRoute
    }
    '/library/view/$libraryId': {
      id: '/library/view/$libraryId'
      path: '/library/view/$libraryId'
      fullPath: '/library/view/$libraryId'
      preLoaderRoute: typeof LibraryViewLibraryIdImport
      parentRoute: typeof rootRoute
    }
    '/module/view/$libraryId/$moduleId': {
      id: '/module/view/$libraryId/$moduleId'
      path: '/module/view/$libraryId/$moduleId'
      fullPath: '/module/view/$libraryId/$moduleId'
      preLoaderRoute: typeof ModuleViewLibraryIdModuleIdImport
      parentRoute: typeof rootRoute
    }
    '/quiz/session/$libraryId/$moduleId/$quizId': {
      id: '/quiz/session/$libraryId/$moduleId/$quizId'
      path: '/quiz/session/$libraryId/$moduleId/$quizId'
      fullPath: '/quiz/session/$libraryId/$moduleId/$quizId'
      preLoaderRoute: typeof QuizSessionLibraryIdModuleIdQuizIdImport
      parentRoute: typeof rootRoute
    }
    '/quiz/view/$libraryId/$moduleId/$quizId': {
      id: '/quiz/view/$libraryId/$moduleId/$quizId'
      path: '/quiz/view/$libraryId/$moduleId/$quizId'
      fullPath: '/quiz/view/$libraryId/$moduleId/$quizId'
      preLoaderRoute: typeof QuizViewLibraryIdModuleIdQuizIdImport
      parentRoute: typeof rootRoute
    }
    '/submission/$libraryId/$moduleId/$quizId/$attempt': {
      id: '/submission/$libraryId/$moduleId/$quizId/$attempt'
      path: '/submission/$libraryId/$moduleId/$quizId/$attempt'
      fullPath: '/submission/$libraryId/$moduleId/$quizId/$attempt'
      preLoaderRoute: typeof SubmissionLibraryIdModuleIdQuizIdAttemptImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/module/create': typeof ModuleCreateRoute
  '/library/view/$libraryId': typeof LibraryViewLibraryIdRoute
  '/module/view/$libraryId/$moduleId': typeof ModuleViewLibraryIdModuleIdRoute
  '/quiz/session/$libraryId/$moduleId/$quizId': typeof QuizSessionLibraryIdModuleIdQuizIdRoute
  '/quiz/view/$libraryId/$moduleId/$quizId': typeof QuizViewLibraryIdModuleIdQuizIdRoute
  '/submission/$libraryId/$moduleId/$quizId/$attempt': typeof SubmissionLibraryIdModuleIdQuizIdAttemptRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/module/create': typeof ModuleCreateRoute
  '/library/view/$libraryId': typeof LibraryViewLibraryIdRoute
  '/module/view/$libraryId/$moduleId': typeof ModuleViewLibraryIdModuleIdRoute
  '/quiz/session/$libraryId/$moduleId/$quizId': typeof QuizSessionLibraryIdModuleIdQuizIdRoute
  '/quiz/view/$libraryId/$moduleId/$quizId': typeof QuizViewLibraryIdModuleIdQuizIdRoute
  '/submission/$libraryId/$moduleId/$quizId/$attempt': typeof SubmissionLibraryIdModuleIdQuizIdAttemptRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/module/create': typeof ModuleCreateRoute
  '/library/view/$libraryId': typeof LibraryViewLibraryIdRoute
  '/module/view/$libraryId/$moduleId': typeof ModuleViewLibraryIdModuleIdRoute
  '/quiz/session/$libraryId/$moduleId/$quizId': typeof QuizSessionLibraryIdModuleIdQuizIdRoute
  '/quiz/view/$libraryId/$moduleId/$quizId': typeof QuizViewLibraryIdModuleIdQuizIdRoute
  '/submission/$libraryId/$moduleId/$quizId/$attempt': typeof SubmissionLibraryIdModuleIdQuizIdAttemptRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/module/create'
    | '/library/view/$libraryId'
    | '/module/view/$libraryId/$moduleId'
    | '/quiz/session/$libraryId/$moduleId/$quizId'
    | '/quiz/view/$libraryId/$moduleId/$quizId'
    | '/submission/$libraryId/$moduleId/$quizId/$attempt'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/module/create'
    | '/library/view/$libraryId'
    | '/module/view/$libraryId/$moduleId'
    | '/quiz/session/$libraryId/$moduleId/$quizId'
    | '/quiz/view/$libraryId/$moduleId/$quizId'
    | '/submission/$libraryId/$moduleId/$quizId/$attempt'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/signup'
    | '/module/create'
    | '/library/view/$libraryId'
    | '/module/view/$libraryId/$moduleId'
    | '/quiz/session/$libraryId/$moduleId/$quizId'
    | '/quiz/view/$libraryId/$moduleId/$quizId'
    | '/submission/$libraryId/$moduleId/$quizId/$attempt'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  ModuleCreateRoute: typeof ModuleCreateRoute
  LibraryViewLibraryIdRoute: typeof LibraryViewLibraryIdRoute
  ModuleViewLibraryIdModuleIdRoute: typeof ModuleViewLibraryIdModuleIdRoute
  QuizSessionLibraryIdModuleIdQuizIdRoute: typeof QuizSessionLibraryIdModuleIdQuizIdRoute
  QuizViewLibraryIdModuleIdQuizIdRoute: typeof QuizViewLibraryIdModuleIdQuizIdRoute
  SubmissionLibraryIdModuleIdQuizIdAttemptRoute: typeof SubmissionLibraryIdModuleIdQuizIdAttemptRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  ModuleCreateRoute: ModuleCreateRoute,
  LibraryViewLibraryIdRoute: LibraryViewLibraryIdRoute,
  ModuleViewLibraryIdModuleIdRoute: ModuleViewLibraryIdModuleIdRoute,
  QuizSessionLibraryIdModuleIdQuizIdRoute:
    QuizSessionLibraryIdModuleIdQuizIdRoute,
  QuizViewLibraryIdModuleIdQuizIdRoute: QuizViewLibraryIdModuleIdQuizIdRoute,
  SubmissionLibraryIdModuleIdQuizIdAttemptRoute:
    SubmissionLibraryIdModuleIdQuizIdAttemptRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/signup",
        "/module/create",
        "/library/view/$libraryId",
        "/module/view/$libraryId/$moduleId",
        "/quiz/session/$libraryId/$moduleId/$quizId",
        "/quiz/view/$libraryId/$moduleId/$quizId",
        "/submission/$libraryId/$moduleId/$quizId/$attempt"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/module/create": {
      "filePath": "module/create.tsx"
    },
    "/library/view/$libraryId": {
      "filePath": "library/view.$libraryId.tsx"
    },
    "/module/view/$libraryId/$moduleId": {
      "filePath": "module/view.$libraryId.$moduleId.tsx"
    },
    "/quiz/session/$libraryId/$moduleId/$quizId": {
      "filePath": "quiz/session.$libraryId.$moduleId.$quizId.tsx"
    },
    "/quiz/view/$libraryId/$moduleId/$quizId": {
      "filePath": "quiz/view.$libraryId.$moduleId.$quizId.tsx"
    },
    "/submission/$libraryId/$moduleId/$quizId/$attempt": {
      "filePath": "submission.$libraryId.$moduleId.$quizId.$attempt.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
