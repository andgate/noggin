/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as LibraryImport } from './routes/library'
import { Route as IndexImport } from './routes/index'
import { Route as ModuleCreateImport } from './routes/module/create'
import { Route as ModuleViewModuleIdImport } from './routes/module/view.$moduleId'
import { Route as SubmissionModuleIdQuizIdAttemptImport } from './routes/submission.$moduleId.$quizId.$attempt'
import { Route as QuizViewModuleIdQuizIdImport } from './routes/quiz/view.$moduleId.$quizId'
import { Route as QuizSessionModuleIdQuizIdImport } from './routes/quiz/session.$moduleId.$quizId'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LibraryRoute = LibraryImport.update({
  id: '/library',
  path: '/library',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ModuleCreateRoute = ModuleCreateImport.update({
  id: '/module/create',
  path: '/module/create',
  getParentRoute: () => rootRoute,
} as any)

const ModuleViewModuleIdRoute = ModuleViewModuleIdImport.update({
  id: '/module/view/$moduleId',
  path: '/module/view/$moduleId',
  getParentRoute: () => rootRoute,
} as any)

const SubmissionModuleIdQuizIdAttemptRoute =
  SubmissionModuleIdQuizIdAttemptImport.update({
    id: '/submission/$moduleId/$quizId/$attempt',
    path: '/submission/$moduleId/$quizId/$attempt',
    getParentRoute: () => rootRoute,
  } as any)

const QuizViewModuleIdQuizIdRoute = QuizViewModuleIdQuizIdImport.update({
  id: '/quiz/view/$moduleId/$quizId',
  path: '/quiz/view/$moduleId/$quizId',
  getParentRoute: () => rootRoute,
} as any)

const QuizSessionModuleIdQuizIdRoute = QuizSessionModuleIdQuizIdImport.update({
  id: '/quiz/session/$moduleId/$quizId',
  path: '/quiz/session/$moduleId/$quizId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/library': {
      id: '/library'
      path: '/library'
      fullPath: '/library'
      preLoaderRoute: typeof LibraryImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/module/create': {
      id: '/module/create'
      path: '/module/create'
      fullPath: '/module/create'
      preLoaderRoute: typeof ModuleCreateImport
      parentRoute: typeof rootRoute
    }
    '/module/view/$moduleId': {
      id: '/module/view/$moduleId'
      path: '/module/view/$moduleId'
      fullPath: '/module/view/$moduleId'
      preLoaderRoute: typeof ModuleViewModuleIdImport
      parentRoute: typeof rootRoute
    }
    '/quiz/session/$moduleId/$quizId': {
      id: '/quiz/session/$moduleId/$quizId'
      path: '/quiz/session/$moduleId/$quizId'
      fullPath: '/quiz/session/$moduleId/$quizId'
      preLoaderRoute: typeof QuizSessionModuleIdQuizIdImport
      parentRoute: typeof rootRoute
    }
    '/quiz/view/$moduleId/$quizId': {
      id: '/quiz/view/$moduleId/$quizId'
      path: '/quiz/view/$moduleId/$quizId'
      fullPath: '/quiz/view/$moduleId/$quizId'
      preLoaderRoute: typeof QuizViewModuleIdQuizIdImport
      parentRoute: typeof rootRoute
    }
    '/submission/$moduleId/$quizId/$attempt': {
      id: '/submission/$moduleId/$quizId/$attempt'
      path: '/submission/$moduleId/$quizId/$attempt'
      fullPath: '/submission/$moduleId/$quizId/$attempt'
      preLoaderRoute: typeof SubmissionModuleIdQuizIdAttemptImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/library': typeof LibraryRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/module/create': typeof ModuleCreateRoute
  '/module/view/$moduleId': typeof ModuleViewModuleIdRoute
  '/quiz/session/$moduleId/$quizId': typeof QuizSessionModuleIdQuizIdRoute
  '/quiz/view/$moduleId/$quizId': typeof QuizViewModuleIdQuizIdRoute
  '/submission/$moduleId/$quizId/$attempt': typeof SubmissionModuleIdQuizIdAttemptRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/library': typeof LibraryRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/module/create': typeof ModuleCreateRoute
  '/module/view/$moduleId': typeof ModuleViewModuleIdRoute
  '/quiz/session/$moduleId/$quizId': typeof QuizSessionModuleIdQuizIdRoute
  '/quiz/view/$moduleId/$quizId': typeof QuizViewModuleIdQuizIdRoute
  '/submission/$moduleId/$quizId/$attempt': typeof SubmissionModuleIdQuizIdAttemptRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/library': typeof LibraryRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/module/create': typeof ModuleCreateRoute
  '/module/view/$moduleId': typeof ModuleViewModuleIdRoute
  '/quiz/session/$moduleId/$quizId': typeof QuizSessionModuleIdQuizIdRoute
  '/quiz/view/$moduleId/$quizId': typeof QuizViewModuleIdQuizIdRoute
  '/submission/$moduleId/$quizId/$attempt': typeof SubmissionModuleIdQuizIdAttemptRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/library'
    | '/login'
    | '/signup'
    | '/module/create'
    | '/module/view/$moduleId'
    | '/quiz/session/$moduleId/$quizId'
    | '/quiz/view/$moduleId/$quizId'
    | '/submission/$moduleId/$quizId/$attempt'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/library'
    | '/login'
    | '/signup'
    | '/module/create'
    | '/module/view/$moduleId'
    | '/quiz/session/$moduleId/$quizId'
    | '/quiz/view/$moduleId/$quizId'
    | '/submission/$moduleId/$quizId/$attempt'
  id:
    | '__root__'
    | '/'
    | '/library'
    | '/login'
    | '/signup'
    | '/module/create'
    | '/module/view/$moduleId'
    | '/quiz/session/$moduleId/$quizId'
    | '/quiz/view/$moduleId/$quizId'
    | '/submission/$moduleId/$quizId/$attempt'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LibraryRoute: typeof LibraryRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  ModuleCreateRoute: typeof ModuleCreateRoute
  ModuleViewModuleIdRoute: typeof ModuleViewModuleIdRoute
  QuizSessionModuleIdQuizIdRoute: typeof QuizSessionModuleIdQuizIdRoute
  QuizViewModuleIdQuizIdRoute: typeof QuizViewModuleIdQuizIdRoute
  SubmissionModuleIdQuizIdAttemptRoute: typeof SubmissionModuleIdQuizIdAttemptRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LibraryRoute: LibraryRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  ModuleCreateRoute: ModuleCreateRoute,
  ModuleViewModuleIdRoute: ModuleViewModuleIdRoute,
  QuizSessionModuleIdQuizIdRoute: QuizSessionModuleIdQuizIdRoute,
  QuizViewModuleIdQuizIdRoute: QuizViewModuleIdQuizIdRoute,
  SubmissionModuleIdQuizIdAttemptRoute: SubmissionModuleIdQuizIdAttemptRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/library",
        "/login",
        "/signup",
        "/module/create",
        "/module/view/$moduleId",
        "/quiz/session/$moduleId/$quizId",
        "/quiz/view/$moduleId/$quizId",
        "/submission/$moduleId/$quizId/$attempt"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/library": {
      "filePath": "library.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/module/create": {
      "filePath": "module/create.tsx"
    },
    "/module/view/$moduleId": {
      "filePath": "module/view.$moduleId.tsx"
    },
    "/quiz/session/$moduleId/$quizId": {
      "filePath": "quiz/session.$moduleId.$quizId.tsx"
    },
    "/quiz/view/$moduleId/$quizId": {
      "filePath": "quiz/view.$moduleId.$quizId.tsx"
    },
    "/submission/$moduleId/$quizId/$attempt": {
      "filePath": "submission.$moduleId.$quizId.$attempt.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
